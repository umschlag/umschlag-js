{{>licenseInfo}}
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/{{#invokerPackage}}{{invokerPackage}}/{{/invokerPackage}}index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/{{#invokerPackage}}{{invokerPackage}}/{{/invokerPackage}}index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.{{moduleName}});
  }
}(this, function(expect, {{moduleName}}) {
  'use strict';

  // eslint-disable-next-line no-unused-vars
  var instance;

  beforeEach(function() {
    instance = new {{moduleName}}.{{classname}}();
  });

  /* eslint-disable no-unused-vars */
  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }
  /* eslint-enable no-unused-vars */

  /* eslint-disable no-unused-vars */
  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }
  /* eslint-enable no-unused-vars */

  describe('{{classname}}', function() {
{{#operations}}
{{#operation}}
    describe('{{operationId}}', function() {
      it('should call {{operationId}} successfully', function(done) {
        //uncomment below and update the code to test {{operationId}}
        //instance.{{operationId}}(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
{{/operation}}
{{/operations}}
  });

}));
